#!/usr/bin/env sh

#
# Copyright 2015 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##############################################################################
##
##  Gradle start up script for UN*X
##
##############################################################################

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

APP_NAME="Gradle"
APP_BASE_NAME=`basename "$0"`

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn () {
    echo "$*"
}

die () {
    echo
    echo "ERROR: $*"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "`uname`" in
    CYGWIN* )
        cygwin=true
        ;;
    Darwin* )
        darwin=true
        ;;
    MINGW* )
        msys=true
        ;;
    NONSTOP* )
        nonstop=true
        ;;
esac

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED_PRG="$PRG"

# Set APP_HOME
APP_HOME=`dirname "$PRG"`

# Add logic to check for problems with startup
if [ -z "$JAVA_HOME" ] ; then
    # If a JDK is installed, it will be found below
    if [ -x /usr/libexec/java_home ] && [ $darwin = "true" ] ; then
        export JAVA_HOME=`/usr/libexec/java_home`
    fi
fi
if [ -z "$JAVA_HOME" ] ; then
    # If a JDK is installed, it will be found below
    if [ -d /usr/java/latest ] ; then
        export JAVA_HOME=/usr/java/latest
    fi
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
    [ -n "$APP_HOME" ] &&
        APP_HOME=`cygpath --unix "$APP_HOME"`
    [ -n "$JAVA_HOME" ] &&
        JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
    [ -n "$CLASSPATH" ] &&
        CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# For MSYS, ensure paths are in UNIX format before anything is touched
if $msys ; then
    [ -n "$APP_HOME" ] &&
        APP_HOME=`( cd "$APP_HOME" && pwd )`
    [ -n "$JAVA_HOME" ] &&
        JAVA_HOME=`( cd "$JAVA_HOME" && pwd )`
    # Add the gradle-wrapper.jar to the classpath
    if [ -n "$CLASSPATH" ] ; then
        CLASSPATH=`( cd "$CLASSPATH" && pwd )`
    fi
fi

# Set JAVA_EXE
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses jre/sh/java
        JAVA_EXE="$JAVA_HOME/jre/sh/java"
    else
        JAVA_EXE="$JAVA_HOME/bin/java"
    fi
else
    JAVA_EXE="java"
fi

if ! "$JAVA_EXE" -version > /dev/null 2>&1 ; then
    die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH."
fi

# Set CLASSPATH
if [ -n "$APP_HOME" ] ; then
    CLASSPATH="$APP_HOME/gradle/wrapper/gradle-wrapper.jar"
fi

# Split up the JVM options only if this is not running on a nonstop platform.
if [ "$nonstop" = "false" ] ; then
    # Add the JAVA_OPTS to the list of JVM options.
    if [ -n "$JAVA_OPTS" ] ; then
        set -- $JAVA_OPTS
        for i in "$@"; do
            JVM_OPTS_ARRAY[${#JVM_OPTS_ARRAY[@]}]="$i"
        done
    fi
    # Add the GRADLE_OPTS to the list of JVM options.
    if [ -n "$GRADLE_OPTS" ] ; then
        set -- $GRADLE_OPTS
        for i in "$@"; do
            JVM_OPTS_ARRAY[${#JVM_OPTS_ARRAY[@]}]="$i"
        done
    fi
    # Add the DEFAULT_JVM_OPTS to the list of JVM options.
    if [ -n "$DEFAULT_JVM_OPTS" ] ; then
        set -- $DEFAULT_JVM_OPTS
        for i in "$@"; do
            JVM_OPTS_ARRAY[${#JVM_OPTS_ARRAY[@]}]="$i"
        done
    fi
else
    # Nonstop platforms don't like splitting up arguments.
    JVM_OPTS="$JAVA_OPTS $GRADLE_OPTS $DEFAULT_JVM_OPTS"
fi

# Execute Gradle
exec "$JAVA_EXE" "${JVM_OPTS_ARRAY[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
